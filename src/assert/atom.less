//屏幕自适应宽度
.screen-width {
    margin-left : 100px;
    margin-right: 100px;
    display     : block;
}

.screen-content-1200 {
    width : 1200px;
    margin: 0 auto;
}

.screen-content-1000 {
    width : 1000px;
    margin: 0 auto;
}

/**
布局
flex:从左到右，水平居中
flex-end:从右到左，水平居中
flex-center:水平、垂直居中
flex-top:从左到右，上对齐
flex-line:行内flex
flex-full:从左到右，水平与父元素同高
flex-auto:子元素自动填充大小
flex-fixed:固定大小
**/
.r-flex {
    >* {
        display        : flex;
        justify-content: flex-start;
        align-items    : center;
        flex-wrap      : nowrap;
    }
}

.flex {
    display        : flex;
    justify-content: flex-start;
    align-items    : center;
    flex-wrap      : nowrap;
}

.flex-left-right,
.flex-round {
    display        : flex;
    justify-content: space-between;
    align-items    : center;
    flex-wrap      : nowrap;
}

.r-flex-end {
    >* {
        display        : flex;
        justify-content: flex-end;
        align-items    : center;
        flex-wrap      : nowrap;
    }
}

.flex-end {
    display        : flex;
    justify-content: flex-end;
    align-items    : center;
    flex-wrap      : nowrap;
}

.flex-top {
    display        : flex;
    justify-content: flex-start;
    align-items    : flex-start;
    flex-wrap      : nowrap;
}

.flex-top-end {
    display        : flex;
    justify-content: flex-end;
    align-items    : flex-start;
    flex-wrap      : nowrap;
}

.r-flex-center {
    >* {
        display        : flex;
        justify-content: center;
        align-items    : center;
        flex-wrap      : nowrap;
    }
}

.flex-center {
    display        : flex;
    justify-content: center;
    align-items    : center;
    flex-wrap      : nowrap;
}

.flex-inline {
    display: inline-flex;
}

.flex-line {
    display: inline-flex;
}

.flex-wrap {
    flex-wrap: wrap;
}

.flex-full {
    display        : flex;
    justify-content: flex-start;
    align-items    : stretch;
    flex-wrap      : nowrap;
}

.flex-column,
.flex-col {
    flex-direction: column;
}

.flex-auto {
    flex-grow  : 1;
    flex-shrink: 1;
}

.flex-fixed {
    flex-grow  : 0;
    flex-shrink: 0;
}



/**
position的布局
.pos-inset: 适配父元素
.pos-center:水平垂直居中
.pos-center-l:右对齐，水平垂直居中
.pos-full: 宽度、高度与屏幕大小一致
.fixed: fixed定位模式
.fixed-full: fixed与屏幕大小一致
.relative: 
**/
.pos {
    position: absolute;
}


.pos-inset {
    position: absolute;
    top     : 0px;
    left    : 0px;
    right   : 0px;
    bottom  : 0px;
}

.pos-center {
    position : absolute;
    top      : 50%;
    left     : 50%;
    transform: translate(-50%, -50%);
}

.pos-center-right {
    position : absolute;
    top      : 50%;
    right    : 0px;
    transform: translate(0%, -50%);
}

.pos-center-left {
    position : absolute;
    top      : 50%;
    left     : 0px;
    transform: translate(0%, -50%);
}

.pos-center-top {
    position : absolute;
    left     : 50%;
    top      : 0px;
    transform: translate(-50%, 0px);
}

.pos-top-right {
    position: absolute;
    top     : 0px;
    right   : 0px;
}

.pos-top-left {
    position: absolute;
    top     : 0px;
    left    : 0px;
}

.pos-top,
.pos-t {
    top     : 0px;
    position: absolute;
}

.pos-left,
.pos-l {
    left    : 0px;
    position: absolute;
}

.pos-right,
.pos-r {
    right   : 0px;
    position: absolute;
}

.pos-bottom,
.pos-b {
    bottom  : 0px;
    position: absolute;
}

.pos-bottom-full {
    bottom  : 0px;
    position: absolute;
    left    : 0px;
    right   : 0px;
}

.pos-full {
    position: absolute;
    top     : 0px;
    left    : 0px;
    width   : 100vw;
    height  : 100vh;
    overflow: hidden;
}

.fixed,
.fix {
    position: fixed;
}

.fixed-full {
    position: fixed;
    top     : 0px;
    left    : 0px;
    width   : 100vw;
    height  : 100vh;
    overflow: hidden;
}

.relative {
    position: relative;
}

.sticky {
    position: sticky;
}


/**
分列布局
中间有空隙，左右两边无空隙
.col-2 2栏间隔10
.col-2-20 2栏间隔20
.col-3 3栏间隔10
.col-3-20 3栏间隔20
.col-4 4栏间隔10
.col-4-20 4栏间隔20
.col-full 列不换行且等高
***/
.col-2 {
    display        : flex;
    justify-content: flex-start;
    flex-wrap      : wrap;

    >* {
        &:first-child {
            width       : calc(50% - 5px);
            margin-right: 5px;
        }

        &:last-child {
            margin-left: 5px;
            width      : calc(50% - 5px)
        }
    }
}

.col-2-20 {
    display        : flex;
    justify-content: flex-start;
    flex-wrap      : wrap;

    >* {
        &:first-child {
            width       : calc(50% - 10px);
            margin-right: 10px;
        }

        &:last-child {
            margin-left: 10px;
            width      : calc(50% - 10px)
        }
    }
}

.col-3 {
    display        : flex;
    justify-content: flex-start;
    flex-wrap      : wrap;

    >* {
        width       : calc(33.3% - 5px);
        margin-right: 5px;

        &:last-child {
            margin-right: 0px;
            margin-left : 5px;
            width       : calc(33.3% - 5px)
        }
    }
}

.col-3-20 {
    display        : flex;
    justify-content: flex-start;
    flex-wrap      : wrap;

    >* {
        width      : calc(33.3% - 10px);
        margin-left: 10px;

        &:last-child {
            margin-right: 0px;
            margin-left : 10px;
            width       : calc(33.3% - 10px)
        }
    }
}

.col-4 {
    display        : flex;
    justify-content: flex-start;
    flex-wrap      : wrap;

    >* {
        width       : calc(25% - 5px);
        margin-right: 5px;

        &:last-child {
            margin-left : 5px;
            margin-right: 0px;
            width       : calc(25% - 5px)
        }
    }
}

.col-4-20 {
    display        : flex;
    justify-content: flex-start;
    flex-wrap      : wrap;

    >* {
        width       : calc(25% - 10px);
        margin-right: 10px;

        &:last-child {
            margin-right: 0px;
            margin-left : 10px;
            width       : calc(25% - 10px)
        }
    }
}

.col-full {
    align-items: stretch;
    flex-wrap  : nowrap;
}

/**
多个子元素的间距是10px
***/
.space {
    display        : inline-flex;
    justify-content: flex-start;
    align-items    : center;

    >* {
        margin-right: 10px;

        &:last-child {
            margin-right: 0px;
        }
    }
}


/***
卡片
***/
.card {
    box-sizing   : border-box;
    padding      : 15px;
    border-radius: 16px;
    background   : white;
    box-shadow   : rgba(15, 15, 15, 0.05) 0px 0px 0px 1px, rgba(15, 15, 15, 0.1) 0px 3px 6px, rgba(15, 15, 15, 0.2) 0px 9px 24px;
}

.card-menu {
    width              : 220px;
    box-sizing         : border-box;
    padding            : 10px 0px;
    border-radius      : 16px;
    background         : white;
    box-shadow         : rgba(15, 15, 15, 0.05) 0px 0px 0px 1px, rgba(15, 15, 15, 0.1) 0px 3px 6px, rgba(15, 15, 15, 0.2) 0px 9px 24px;
    max-height         : 80vh;
    overflow-y         : auto;
    overscroll-behavior: contain;
}

/**
鼠标移上去的hover效果
item-hover:行移去的效果
item-hover-focus:行处于的效果（由js判定)
item-hover-light:行移去的效果
item-hover-light-focus:行处于的效果，偏轻
item-selected:选中的效果
***/
.r-item-hover {
    >* {
        &:hover {
            background-color: rgba(55, 53, 47, 0.08);
        }
    }
}

.item-hover {
    &:hover {
        background-color: rgba(55, 53, 47, 0.08);
    }
}

.item-hover-1 {
    &:hover {
        color           : var(--interactive-hover);
        background-color: var(--background-modifier-selected);
    }
}


.item-hover-focus {
    background-color: rgba(55, 53, 47, 0.1);
}

.item-hover-light {
    &:hover {
        background-color: rgba(55, 53, 47, 0.06);
    }
}

.item-hover-light-focus {
    background-color: rgba(55, 53, 47, 0.06);
}

.item-selected {
    background-color: rgba(55, 53, 47, 0.08);
}

.item-hover-primary {
    &:hover {
        background-color: rgb(225, 98, 89);
    }
}

.item-white-hover {
    &:hover {
        background-color: #f5f5f5;
    }
}

/**
文本显示
字的大小、精细
***/
.h1 {
    margin-top   : 0px;
    margin-bottom: 0.5em;
    color        : rgba(55, 53, 47);
    font-weight  : 600;
    font-size    : 30px;
    line-height  : 1.35;
}

.h2 {
    margin-top   : 0px;
    margin-bottom: 0.5em;
    color        : rgba(55, 53, 47);
    font-weight  : 600;
    font-size    : 24px;
    line-height  : 1.35;
}

.h3 {
    margin-top   : 0px;
    margin-bottom: 0.5em;
    color        : rgba(55, 53, 47);
    font-weight  : 600;
    font-size    : 20px;
    line-height  : 1.4;
}

.h4 {
    margin-bottom: 0.5em;
    color        : rgba(55, 53, 47);
    font-weight  : 600;
    font-size    : 16px;
    line-height  : 1.5;
}

.bold {
    font-weight: bold;
}

.underline {
    text-decoration: underline;
}

.underline-hover {
    &:hover {
        text-decoration: underline;
    }
}

.no-underline {
    text-decoration: none !important;
}

.del {
    text-decoration: line-through;
}

.remark {
    color          : rgba(55, 53, 47, 0.5);
    // fill        : rgba(55, 53, 47);
    // fill-opacity: .5;
}

.text-white {
    color: #fff;
}

.text-primary {
    color: rgb(225, 98, 89);
}

.text-black {
    color: #000;
}

.text {
    color   : rgba(55, 53, 47);
    // fill : currentColor;
}

.text-1 {
    color          : rgba(55, 53, 47, 0.8);
    // fill        : rgba(55, 53, 47);
    // fill-opacity: 0.8;
}

.text-0 {
    color          : transparent;
    // fill        : transparent;
    // fill-opacity: 0;
}

.link {
    color: #64a1df;
}

.green {
    color: #21af5a;
    fill : #21af5a;
}

.code {
    display      : inline-block;
    margin       : 0 1px;
    padding      : 0.2em 0.4em;
    background   : #f2f4f5;
    border       : 1px solid rgba(0, 0, 0, .06);
    border-radius: 3px;
}

.code-block {
    display      : block;
    margin       : 0 1px;
    padding      : 20px;
    background   : #f2f4f5;
    border       : 1px solid rgba(0, 0, 0, .06);
    border-radius: 8px;
}

.md {
    pre {
        display      : block;
        margin       : 0 1px;
        padding      : 20px;
        background   : #f2f4f5;
        border       : 1px solid rgba(0, 0, 0, .06);
        border-radius: 8px;
    }
}


.error {
    color: #ff4d4f;
}

.f-12 {
    font-size  : 12px;
    line-height: 16px;
}

.f-14 {
    font-size  : 14px;
    line-height: 20px;
}

.f-16 {
    font-size  : 16px;
    line-height: 24px;
}

.f-18 {
    font-size  : 18px;
    line-height: 28px;
}

.f-20 {
    font-size  : 20px;
    line-height: 30px;
}

.l-12 {
    line-height: 12px;
}

.l-14 {
    line-height: 14px;
}

.l-16 {
    line-height: 16px;
}

.l-20 {
    line-height: 20px;
}


/**
可见性
**/
.visible {
    visibility: visible;
}

.visible-hover {
    .visible {
        visibility: hidden;
    }

    &:hover {
        .visible {
            visibility: visible;
        }
    }
}

.hide {
    visibility: hidden;
}

.none {
    display: none;
}

.none-hover {
    .none {
        display: none;
    }

    &:hover {
        .none {
            display: inline-block;
        }
    }

    .none-block {
        display: none;
    }

    &:hover {
        .none-block {
            display: block;
        }
    }

    .none-flex {
        display: none;
    }

    &:hover {
        .none-flex {
            display: flex;
        }
    }

    .none-inline-flex {
        display: none;
    }

    &:hover {
        .none-inline-flex {
            display: inline-flex;
        }
    }
}

.text-over,
.text-overflow {
    white-space  : nowrap;
    text-overflow: ellipsis;
    overflow     : hidden;
}


/***
图片显示
定宽居中显示
***/
.object-cover,
.object-center {
    object-fit     : cover;
    object-position: center center;
}

.overflow {
    overflow: auto;
}

.overflow-hidden {
    overflow: hidden;
}

.overflow-y {
    overflow-y: auto;
}

.overscroll-contain {
    overscroll-behavior: contain;
}

/**
cursor鼠标
**/
.r-cursor {
    >* {
        cursor: pointer;
    }
}

.cursor {
    cursor: pointer;
}

.cursor-col {
    cursor: col-resize;
}

.cursor-row {
    cursor: row-resize;
}

.cursor-grab {
    cursor: grab;
}

.cursor-text {
    cursor: text;
}

.cursor-help {
    cursor: help;
}

.cursor-default {
    cursor: default;
}

.cursor-not-allowed {
    cursor: not-allowed;
}

/**
宽度
***/

@selectors: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 20, 24, 26, 28, 30, 32, 36, 40, 48, 50, 60, 72, 80, 88, 90, 100, 120, 150, 160, 180, 200, 220, 240, 250, 270, 280, 300, 320, 350, 360, 400, 450, 480, 500, 540, 550, 600, 720, 750, 760, 800, 900, 960, 1000, 1200;

each(@selectors, {
        .w-@{value} {
            width: @value+0px;
        }

        .min-w-@{value} {
            min-width: @value+0px;
        }

        .max-w-@{value} {
            max-width: @value+0px;
        }

        .h-@{value} {
            height:@value+0px;
        }

        .min-h-@{value} {
            min-height: @value+0px;
        }

        .max-h-@{value} {
            max-height: @value+0px;
        }

        .w-c-@{value} {
            @w   : @value+0px;
            width:calc(100% - @w);
        }
    }

);



.h100 {
    height: 100%;
}

.w100 {
    width: 100%;
}

@ops: 1, 0, 2, 4, 5, 6, 8, 9, 7;

each(@ops, {
        .op-@{value} {
            opacity:@value*0.1;
        }
    }

) .box-border {
    box-sizing: border-box;
}

.box-content {
    box-sizing: content-box;
}

.block {
    display: block;
}

.line {
    display: inline;
}

.line-block,
.inline-block {
    display: inline-block;
}

/***
列表
***/
.list-none {
    list-style: none;
}

.list-circle {
    list-style: circle;
}

.list-decimal {
    list-style: decimal;
}

.list-disc {
    list-style: disc;
}

.list-inside {
    list-style-position: inside;
}

.list-outside {
    list-style-position: outside;
}

.pointer-events-none {
    pointer-events: none;
}

.pointer-events-auto {
    pointer-events: auto;
}

.select-none {
    user-select: none;
}

.select-text {
    user-select: text;
}

.stroke-0 {
    stroke-width: 0;
}

.stroke-1 {
    stroke-width: 1;
}

.stroke-2 {
    stroke-width: 2;
}

.resize-none {
    resize: none;
}

.resize-y {
    resize: vertical;
}

.resize-x {
    resize: horizontal;
}

.resize {
    resize: both;
}

.outline-none {
    outline       : 2px solid transparent;
    outline-offset: 2px;
}

.table-auto {
    table-layout: auto;
}

.table-fixed {
    table-layout: fixed;
}

.text-left {
    text-align: left;
}

.text-center {
    text-align: center;
}

.text-right {
    text-align: right;
}


.ts-none {
    transition-property: none;
}

.ts-all {
    transition-property       : all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration       : 150ms;
}

.ts {
    transition-property       : background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration       : 150ms;
}

.ts-colors {
    transition-property       : background-color, border-color, color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration       : 150ms;
}

.ts-op {
    transition-property       : opacity;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration       : 150ms;
}

.ts-shadow {
    transition-property       : box-shadow;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration       : 150ms;
}

.ts-transform {
    transition-property       : transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration       : 150ms;
}


.animate-none {
    animation: none;
}

.animate-spin {
    animation: animate-spin 1s linear infinite;
}

@keyframes animate-spin {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

.animate-ping {
    animation: animate-ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
}

@keyframes animate-ping {

    75%,
    100% {
        transform: scale(2);
        opacity  : 0;
    }
}

.animate-pulse {
    animation: animate-pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes animate-pulse {

    0%,
    100% {
        opacity: 1;
    }

    50% {
        opacity: .5;
    }
}

.animate-bounce {
    animation: animate-bounce 1s infinite;
}

@keyframes animate-bounce {

    0%,
    100% {
        transform                : translateY(-25%);
        animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
    }

    50% {
        transform                : translateY(0);
        animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
}

.bg-0 {
    background-color: transparent;
}

.bg-white,
.white {
    background-color: #fff;
}

.bg-black {
    background-color: #000;
}


.bg-primary {
    background-color: rgb(225, 98, 89)
}

.fill-primary {
    fill : rgb(225, 98, 89);
    color: rgb(225, 98, 89);

    svg path,
    &svg path {
        fill  : rgb(225, 98, 89);
        color : rgb(225, 98, 89);
        stroke: rgb(225, 98, 89);
    }
}

.bg {
    background-color: rgba(55, 53, 47, 0.08) !important;
}

.bg-light {
    background-color: rgba(55, 53, 47, 0.04) !important;
}

.shadow {
    box-shadow: rgba(15, 15, 15, 0.016) 0px 0px 0px 1px, rgba(15, 15, 15, 0.03) 0px 3px 6px, rgba(15, 15, 15, 0.06) 0px 9px 24px
}

.border {
    border: 1px solid rgba(55, 53, 47, 0.16);
}

.border-left {
    border-left: 1px solid rgba(55, 53, 47, 0.16);
}

.border-right {
    border-right: 1px solid rgba(55, 53, 47, 0.16);
}

.border-light-left {
    border-left: 1px solid rgba(55, 53, 47, 0.08);
}

.border-primary {
    border: 1px solid rgb(225, 98, 89);
}

.border-bottom,
.border-b {
    border-bottom: 1px solid rgba(55, 53, 47, 0.16);
}

.border-light {
    border: 1px solid rgba(55, 53, 47, 0.08);
}

.border-light-bottom,
.border-light-b {
    border-bottom: 1px solid rgba(55, 53, 47, 0.08);
}

.border-light-top,
.border-light-t {
    border-top: 1px solid rgba(55, 53, 47, 0.08);
}

.no-border,
.noborder {
    border: none;
}


.break-normal {
    overflow-wrap: normal;
    word-break   : normal;
}

.break-words {
    overflow-wrap: break-word;
}

.break-all {
    word-break: break-all;
}

.g-1 {
    background-image: linear-gradient(to right, #ecfdf5, #ecfdf5);
}

.g-2 {
    background-image: linear-gradient(to right, #fff1f2, #ffe4e6);
}

.text-indent {
    text-indent: 10px;
}

.uppercase {
    text-transform: uppercase;
}

.lowercase {
    text-transform: lowercase;
}


/**
大小
size-24:图标大小
**/

@sizes: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 18, 20, 24, 30, 32, 40, 48, 50, 70, 80, 90, 100, 120, 150, 200, 240, 300;

each(@sizes, {
        .r-size-@{value} {
            >* {
                width  :@value+0px;
                height :@value+0px;
            }
        }

        .size-@{value} {
            width  :@value+0px;
            height :@value+0px;
        }
    }

)

/**
形状
circle:圆
.round:圆角（图标、按钮类）
.round-card:卡片类的圆角，比较大一些
**/
.r-circle {
    >* {
        border-radius: 50%;
    }
}

.circle {
    border-radius: 50%;
}


.rect {
    border-radius: 0%;
}

.round-0 {
    border-radius: 0%;
}

.r-round {
    >* {
        border-radius: 4px;
    }
}

.round {
    border-radius: 4px;
}


.round-top {
    border-radius: 4px 4px 0px 0px;
}



@ras: 2, 4, 8, 5, 10, 14, 16, 20, 24, 30, 32, 48, 50, 60, 80, 100, 0;

each(@ras, {
        .r-round-@{value} {
            >* {
                border-radius: @value+0px;
            }
        }

        .r-round-top-@{value}, .r-round-t-@{value} {
            >* {
                border-top-left-radius : @value+0px;
                border-top-right-radius: @value+0px;
            }
        }

        .r-round-bottom-@{value}, .r-round-b-@{value} {
            >* {
                border-bottom-left-radius : @value+0px;
                border-bottom-right-radius: @value+0px;
            }
        }

        .r-round-left-@{value}, .r-round-l-@{value} {
            >* {
                border-top-left-radius    : @value+0px;
                border-bottom-left-radius : @value+0px;
            }
        }

        .r-round-right-@{value}, .r-round-r-@{value} {
            >* {
                border-top-right-radius   : @value+0px;
                border-bottom-right-radius: @value+0px;
            }
        }


        .round-@{value} {
            border-radius: @value+0px;
        }

        .round-top-@{value}, .round-t-@{value} {
            border-top-left-radius : @value+0px;
            border-top-right-radius: @value+0px;
        }

        .round-bottom-@{value}, .round-b-@{value} {
            border-bottom-left-radius : @value+0px;
            border-bottom-right-radius: @value+0px;
        }

        .round-left-@{value}, .round-l-@{value} {
            border-top-left-radius    : @value+0px;
            border-bottom-left-radius : @value+0px;
        }

        .round-right-@{value}, .round-r-@{value} {
            border-top-right-radius   : @value+0px;
            border-bottom-right-radius: @value+0px;
        }
    }

)
/***
间距
gap-5：相邻的行内元素间距，适用于符号（如文字与图标符合的组合）
gap-l-5:相邻的行内元素左间距
gap-r-5:相邻的行内元素右间距
gap-10:一般指两个图标的间隔
gap-l-10
gap-r-10
gap-b-20:指模块间距（有明显的块与块之间的间距），大标题内容与另外的大标题内容，垂直的两张卡片
**/

.gap-auto {
    margin: 0 auto;
}

@gaps: 0, 3, 5, 10, 14, 15, 20, 25, 24, 30, 48, 50, 60, 80, 100;

each(@gaps, {

        .r-gap-@{value} {
            >* {
                margin-top   :@value+0px;
                margin-left  :@value+0px;
                margin-bottom:@value+0px;
                margin-right :@value+0px;
            }
        }

        .r-gap-w-@{value} {
            >* {
                margin-left :@value+0px;
                margin-right:@value+0px;
            }
        }

        .r-gap-h-@{value} {
            >* {
                margin-top   :@value+0px;
                margin-bottom:@value+0px;
            }

        }

        .r-gap-t-@{value} {
            >* {
                margin-top:@value+0px;
            }

        }

        .r-gap-l-@{value} {
            >* {
                margin-left:@value+0px;
            }

        }

        .r-gap-r-@{value} {
            >* {
                margin-right:@value+0px;
            }

        }

        .r-gap-b-@{value} {
            >* {
                margin-bottom:@value+0px;
            }
        }

        .gap-@{value} {
            margin-top   :@value+0px;
            margin-left  :@value+0px;
            margin-bottom:@value+0px;
            margin-right :@value+0px;
        }

        .gap-w-@{value} {
            margin-left :@value+0px;
            margin-right:@value+0px;
        }

        .gap-h-@{value} {
            margin-top   :@value+0px;
            margin-bottom:@value+0px;
        }

        .gap-t-@{value} {
            margin-top:@value+0px;
        }

        .gap-l-@{value} {
            margin-left:@value+0px;
        }

        .gap-r-@{value} {
            margin-right:@value+0px;
        }

        .gap-b-@{value} {
            margin-bottom:@value+0px;
        }


    }

)
/**
z-index
****/
@zs: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 100, 200, 300, 1000, 2000, 3000, 10000, 20000, 50000, 60000;

each(@zs, {
        .z-@{value} {
            z-index:@value;
        }
    }

)
/***
内间距
.pad-10：一般指段落的水平内补白（优先选择）
.pad-15: 一般指段落的水平内补白
.pad-20: 一般指卡片或对话框的全补白
***/

@pads: 0, 2, 3, 4, 5, 6, 8, 10, 14, 15, 20, 25, 24, 30, 48, 50, 60, 80, 100;

each(@pads, {

        .r-padding-@{value} {
            >* {
                padding-top   :@value+0px;
                padding-left  :@value+0px;
                padding-bottom:@value+0px;
                padding-right :@value+0px;
            }
        }

        .r-padding-w-@{value} {
            >* {
                padding-left :@value+0px;
                padding-right:@value+0px;
            }
        }

        .r-padding-h-@{value} {
            >* {
                padding-top   :@value+0px;
                padding-bottom:@value+0px;
            }
        }

        .r-padding-t-@{value} {
            >* {
                padding-top:@value+0px;
            }
        }

        .r-padding-l-@{value} {
            >* {
                padding-left:@value+0px;
            }
        }

        .r-padding-r-@{value} {
            >* {
                padding-right:@value+0px;
            }
        }

        .r-padding-b-@{value} {
            >* {
                padding-bottom:@value+0px;
            }
        }


        .padding-@{value} {
            padding-top   :@value+0px;
            padding-left  :@value+0px;
            padding-bottom:@value+0px;
            padding-right :@value+0px;
        }

        .padding-w-@{value} {
            padding-left :@value+0px;
            padding-right:@value+0px;
        }

        .padding-h-@{value} {
            padding-top   :@value+0px;
            padding-bottom:@value+0px;
        }

        .padding-t-@{value} {
            padding-top:@value+0px;
        }

        .padding-l-@{value} {
            padding-left:@value+0px;
        }

        .padding-r-@{value} {
            padding-right:@value+0px;
        }

        .padding-b-@{value} {
            padding-bottom:@value+0px;
        }
    }

) .mask {
    background: rgba(15, 15, 15, 0.6);
}

.mask-1 {
    background: rgba(15, 15, 15, 0.1);
}

.width-atuo,
.w-auto {
    width: auto
}

.h-auto,
.height-auto {
    height: auto;
}